@model CCIA2.Models.ViewModels.MemberAppraiseViewModel

<div class="member_bg container">
    <h3>會員基本資料</h3>

    <div class="row">
        @Html.LabelFor(model => model.member.mrJoinYear, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrJoinYear)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrMemberTypesqno, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.memberType.membertypename)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.MemberGroupApply, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-2">
            第一組 ： @Html.DisplayFor(model => model.member.MemberGroupApply.FirstOrDefault().First)
        </div>
        <div class="col-sm-2">
            第二組 ： @Html.DisplayFor(model => model.member.MemberGroupApply.FirstOrDefault().Second)
        </div>
        <div class="col-sm-2">
            第三組 ： @Html.DisplayFor(model => model.member.MemberGroupApply.FirstOrDefault().Third)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrName, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrName)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrId, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrId)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrBirth, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrBirth)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrMobile, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrMobile)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrTel, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrTel)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrMainEmail, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrMainEmail)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrOtherEmail, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrOtherEmail)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrAddress, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrAddress)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrNation, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrNation)
        </div>
    </div>
    <div class="row">
        <label class="text-right col-sm-3 control-label">語言能力</label>
        <div class="col-sm-1">
            中：@Html.DisplayFor(model => model.member.mrChineseLevel)
        </div>
        <div class="col-sm-1">
            英：@Html.DisplayFor(model => model.member.mrEnglishLevel)
        </div>
        <div class="col-sm-1">
            日：@Html.DisplayFor(model => model.member.mrJPLevel)
        </div>
        <div class="col-sm-1">
            台：@Html.DisplayFor(model => model.member.mrTaiwanLevel)
        </div>
        <div class="col-sm-1">
            客：@Html.DisplayFor(model => model.member.mrHakkaLevel)
        </div>
        <div class="col-sm-2">
            其他：@Html.DisplayFor(model => model.member.mrOtLanguageLevel)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrRole, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.Raw(Int32.Parse(Model.member.mrRole) == 1 ? "社會人士" : "學生")
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrSocialEdu, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrSocialEdu)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrSocialComp, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrSocialComp)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrSocialTitle, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrSocialTitle)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrCateType, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.Raw(Model.member.mrCateType == "1" ? "文創產業 - " : Model.member.mrOtherCategory)
            @if (Model.member.mrCateType == "1")
            {
                @Html.Raw(Model.member.mrCultureSqno == 16 ? Model.member.mrCultureOther : Model.member.culture.CultureName)
            }
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.MemberSupport, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @if (Model.member.MemberSupport != null && Model.member.MemberSupport.Count > 0)
            {
                foreach (var support in Model.member.MemberSupport)
                {
                    <div class="row">
                        <div class="col-sm-4">@Html.DisplayFor(x => support.plan.PlanName)</div>
                        @Html.LabelFor(x => support.SupportName, htmlAttributes: new { @class = "text-right col-sm-2" })
                        <div class="col-sm-3">@Html.DisplayFor(x => support.SupportName)</div>
                        @Html.LabelFor(x => support.SupportYear, htmlAttributes: new { @class = "text-right col-sm-2" })
                        <div class="col-sm-1">@Html.DisplayFor(x => support.SupportYear)</div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrPro, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrPro)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrSkill, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrSkill)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrFuture, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrFuture)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrOther, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.DisplayFor(model => model.member.mrOther)
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.mrIsOpen, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.Raw(Model.member.mrIsOpen == "Y" ? "是" : "否")
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.member.MemberAttchFile, htmlAttributes: new { @class = "text-right col-sm-3 control-label" })
        <div class="col-sm-9">
            @if (Model.member.MemberAttchFile != null && Model.member.MemberAttchFile.Count > 0)
            {
                <div class="row">
                    @foreach (var attachFile in Model.member.MemberAttchFile)
                    {
                        <div class="col-sm-4">
                            @Html.ActionLink(attachFile.mrAttchFileName, "DownloadMemberAttchFile", new { sqno = attachFile.sqno }, new { target = "_blank" })
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>
<br />
<div class="member_bg container">
    <h3>個階段審核紀錄</h3>
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.LabelFor(model => model.member.MemberGroupResult.FirstOrDefault().AppraiseStep)</th>
                <th>@Html.LabelFor(model => model.member.MemberGroupResult.FirstOrDefault().AppraiseResult)</th>
                <th>@Html.LabelFor(model => model.member.MemberGroupResult.FirstOrDefault().AppraiseGroup)</th>
                <th>@Html.LabelFor(model => model.member.MemberGroupResult.FirstOrDefault().AppraiseDesc)</th>
                <th>@Html.LabelFor(model => model.member.MemberGroupResult.FirstOrDefault().AppraiseNo)</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.member.MemberGroupResult != null)
            {
                foreach (var item in Model.member.MemberGroupResult)
                {
                    <tr>
                        <td>@item.currentStateString()</td>
                        <td>@item.appraiseResultString()</td>
                        <td>@Html.DisplayFor(modeItem => item.AppraiseGroup)</td>
                        <td>@Html.DisplayFor(modeItem => item.AppraiseDesc)</td>
                        <td>@Html.DisplayFor(modeItem => item.AppraiseNo)</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<br />
<div class="member_bg container">
    <h3>審核</h3>
    @using (Html.BeginForm("Appraise", "Member", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.sqno)
        @Html.HiddenFor(model => model.newAppraiseResult.mrSqno)
        @Html.HiddenFor(model => model.newAppraiseResult.mrNumber)
        @Html.HiddenFor(model => model.newAppraiseResult.AppraiseStep)
        @Html.HiddenFor(model => model.newAppraiseResult.AppraiseNo)
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>@Html.LabelFor(model => model.newAppraiseResult.AppraiseStep)</th>
                    <th>@Html.LabelFor(model => model.newAppraiseResult.AppraiseResult)</th>
                    <th>@Html.LabelFor(model => model.newAppraiseResult.AppraiseGroup)</th>
                    <th>@Html.LabelFor(model => model.newAppraiseResult.AppraiseDesc)</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.newAppraiseResult.currentStateString()</td>
                    <td>
                        @Html.DropDownListFor(model => model.newAppraiseResult.AppraiseResult, (IEnumerable<SelectListItem>)ViewBag.AppraiseResultList, htmlAttributes: new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.newAppraiseResult.AppraiseGroup, (IEnumerable<SelectListItem>)ViewBag.AppraiseGroupList, htmlAttributes: new { @class = "form-control" })
                    </td>
                    <td class="col-sm-6">
                        @Html.TextAreaFor(mode => Model.newAppraiseResult.AppraiseDesc, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })
                    </td>
                </tr>
            </tbody>
        </table>
        <input type="submit" value="送出審查結果" class="btn btn-primary" />
        @Html.ActionLink("回上頁", "Index", null, htmlAttributes: new { @class="btn btn-default" })
    }
</div>