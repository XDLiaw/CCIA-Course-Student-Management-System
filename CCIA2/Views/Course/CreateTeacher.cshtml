@model CCIA2.Models.CourseTeacher
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/bootstrap")
    @*<script src='//cdn.tinymce.com/4/tinymce.min.js'></script>*@
    <script src="/Scripts/tinymce/tinymce.min.js"></script>
    <script src="/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script>
        //網頁編輯器設定
        tinymce.init({
            selector: '#textArea-introduction',
            plugins: [
              'advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker',
              'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',
              'save table contextmenu directionality emoticons template paste textcolor'
            ],
            content_css: 'css/content.css',
            menubar: 'file edit view format tools table',
            toolbar: [
                'code | undo redo | cut copy paste | bold italic underline strikethrough | styleselect formatselect fontselect fontsizeselect  ',
                'bullist numlist outdent indent | alignleft aligncenter alignright alignjustify | link searchreplace table | forecolor backcolor'
            ],
            height: 400
        });
    </script>
    <script src="/Scripts/jquery.bpopup.min.js"></script>
    <script>
        $(document).ready(function () {          
            $("#submitByAjax").click(function (event) {
                event.preventDefault();
                var data = {
                    sqno: $("#hidden-sqno").val(),
                    name: $("#textbox-teacherName").val(),
                    orgName: $("#textbox-orgName").val(),
                    introduction: $("#textArea-introduction").val()
                };

                $.post(
                    "@Url.Content("~/CourseTeacher/CreateTeacher")",
                    data,
                    function (res) {
                        if (res.success) {
                            alert("新增成功");
                            //$('#div-bPopupWin').bPopup().close(); //不要用這個, 會無法觸發原本的onClose事件
                            $("#btn-close-bPopupWin").trigger("click");
                        } else {
                            if (typeof (res.errorMessage) != 'undefined') {
                                alert(res.errorMessage);
                            }
                            if (typeof (res.ModelStateErrors) != 'undefined') {
                                $.each(res.ModelStateErrors, function (key, value) {
                                    //alert(key + ":" + value[0]);
                                    if (value != null) {
                                        var container = $('span[data-valmsg-for="' + key + '"]');
                                        container.removeClass("field-validation-valid").addClass("field-validation-error");
                                        container.html(value[0]);
                                    }
                                });
                            }
                        }
                        return false;
                    },
                    "json"
                );
                return false;
            });
        });
    </script>
</head>
<body>
    <div class="">
        <div class="member_bg form-horizontal">
            @Html.HiddenFor(model => model.sqno, htmlAttributes: new { @id = "hidden-sqno" })
            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "text-right col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.name, htmlAttributes: new { @class = "form-control", id = "textbox-teacherName" })
                    @Html.ValidationMessageFor(model => model.name, null, new { @class = "help-inline text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.orgName, htmlAttributes: new { @class = "text-right col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.orgName, htmlAttributes: new { @class = "form-control", id = "textbox-orgName" })
                    @Html.ValidationMessageFor(model => model.orgName, null, new { @class = "help-inline text-danger" })
                </div>
            </div>
            @*<div class="form-group">
                <label class="text-right col-sm-2 control-label">課程列表</label>
                <div class="col-sm-10">
                    <table class="table table-striped table-hover table-bordered">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(modelItem => Model.courses.FirstOrDefault().course.topic)</th>
                                <th>@Html.DisplayNameFor(modelItem => Model.courses.FirstOrDefault().course.title)</th>
                                <th>@Html.DisplayNameFor(modelItem => Model.courses.FirstOrDefault().course.day)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var courseTeacherR in Model.courses)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => courseTeacherR.course.topic)</td>
                                    <td>@Html.DisplayFor(modelItem => courseTeacherR.course.title)</td>
                                    <td>
                                        @Html.DisplayFor(modelItem => courseTeacherR.course.day)
                                        @Html.DisplayFor(modelItem => courseTeacherR.course.startTime)~@Html.DisplayFor(modelItem => courseTeacherR.course.endTime)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.introduction, htmlAttributes: new { @class = "text-right col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.introduction, htmlAttributes: new { @class = "form-control", @id = "textArea-introduction" })
                    @Html.ValidationMessageFor(model => model.introduction, null, new { @class = "help-inline text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2"></div>
                <div class="col-sm-10">
                    <input type="button" value="送出" id="submitByAjax" class="btn btn-primary" />
                    <input type="button" value="取消" class="btn btn-default" onclick='$("#btn-close-bPopupWin").trigger("click");'/>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
