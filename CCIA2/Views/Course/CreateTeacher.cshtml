@model CCIA2.Models.CourseTeacher
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>

    @*<script src='//cdn.tinymce.com/4/tinymce.min.js'></script>*@
    <script src="/Scripts/tinymce/tinymce.min.js"></script>
    <script src="/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script>
        //網頁編輯器設定
        tinymce.init({
            selector: '#textArea-introduction',
            plugins: [
              'advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker',
              'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',
              'save table contextmenu directionality emoticons template paste textcolor'
            ],
            content_css: 'css/content.css',
            menubar: 'file edit view format tools table',
            toolbar: [
                'code | undo redo | cut copy paste | bold italic underline strikethrough | styleselect formatselect fontselect fontsizeselect  ',
                'bullist numlist outdent indent | alignleft aligncenter alignright alignjustify | link searchreplace table | forecolor backcolor'
            ],
            height: 400
        });
    </script>
    <script src="/Scripts/jquery.bpopup.min.js"></script>
    <script>
        $(document).ready(function () {
            submitAjaxSetting();
        });
    </script>
    <script>
        function submitAjaxSetting() {
            $("#submitByAjax").click(function (event) {
                event.preventDefault();
                //alert(tinyMCE.activeEditor.getContent()); // 此行可以拿到網頁編輯器裡面的值
                tinyMCE.triggerSave(); //很重要, 這行沒寫的話 tinyMCE套件 不會把資料放進teaxArea裡面

                var formData = new FormData();
                formData.append("sqno", $("#hidden-sqno").val());
                formData.append("name", $("#textbox-teacherName").val());
                formData.append("orgName", $("#textbox-orgName").val());
                formData.append("introduction", $("#textArea-introduction").val());
                formData.append("uploadPhoto", $("#photoUpload").get(0).files[0]);

                $.ajax({
                    url: "@Url.Content("~/Course/CreateTeacher")",
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: formData,
                    success: function (res) {
                        if (res.success) {
                            alert("新增成功");
                            //$('#div-bPopupWin').bPopup().close(); //不要用這個, 會無法觸發原本的onClose事件
                            $("#btn-close-bPopupWin").trigger("click");
                        } else {
                            if (typeof (res.errorMessage) != 'undefined') {
                                alert(res.errorMessage);
                            }
                            if (typeof (res.ModelStateErrors) != 'undefined') {
                                $.each(res.ModelStateErrors, function (key, value) {
                                    //alert(key + ":" + value[0]);
                                    if (value != null) {
                                        var container = $('span[data-valmsg-for="' + key + '"]');
                                        container.removeClass("field-validation-valid").addClass("field-validation-error");
                                        container.html(value[0]);
                                    }
                                });
                            }
                        }
                    },
                    error: function (er) {
                        alert(er);
                    }
                });

                return false;
            });
        }
    </script>
    <script type="text/javascript">
        function readURL(input) {
            //alert(input.files);
            //alert(input.files[0]);
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#teacherPhoto').attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
</head>
<body>
    <div class="">
        <div class="member_bg form-horizontal">
            @Html.HiddenFor(model => model.sqno, htmlAttributes: new { @id = "hidden-sqno" })
            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "text-right col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.name, htmlAttributes: new { @class = "form-control", id = "textbox-teacherName" })
                    @Html.ValidationMessageFor(model => model.name, null, new { @class = "help-inline text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "text-right col-sm-2 control-label" })
                <div class="col-sm-10">
                    <img id="teacherPhoto" src="data:image;base64,@Model.photoBase64" style="max-width:400px; max-height:400px;" />
                    <p>
                        <span class="btn btn-default btn-file">
                            瀏覽
                            @Html.TextBoxFor(model => model.uploadPhoto, new { Type = "file", id = "photoUpload", @class = "upload", onchange = "readURL(this);" })
                        </span>
                    </p>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.orgName, htmlAttributes: new { @class = "text-right col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.orgName, htmlAttributes: new { @class = "form-control", id = "textbox-orgName" })
                    @Html.ValidationMessageFor(model => model.orgName, null, new { @class = "help-inline text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.introduction, htmlAttributes: new { @class = "text-right col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.introduction, htmlAttributes: new { @class = "form-control", @id = "textArea-introduction" })
                    @Html.ValidationMessageFor(model => model.introduction, null, new { @class = "help-inline text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2"></div>
                <div class="col-sm-10">
                    <input type="button" value="送出" id="submitByAjax" class="btn btn-primary" />
                    <input type="button" value="取消" class="btn btn-default" onclick='$("#btn-close-bPopupWin").trigger("click");'/>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
